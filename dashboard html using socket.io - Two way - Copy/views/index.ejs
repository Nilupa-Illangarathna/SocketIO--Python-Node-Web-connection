<!DOCTYPE html>
<html>
<head>
  <title>State Update</title>
  <!-- CSS content -->
  <style>
    .container {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      width: 600px;
      height: 600px;
      background-color: lightgray;
    }

    .circle {
      width: 100px;
      height: 100px;
      border-radius: 50%;
      margin-bottom: 20px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 16px;
      font-weight: bold;
    }

    .text {
      font-size: 20px;
      font-weight: bold;
      text-align: center;
    }

    .blink {
      animation: blink 1s infinite;
    }

    @keyframes blink {
      0% {
        opacity: 0.3;
      }

      50% {
        opacity: 1;
      }

      100% {
        opacity: 0.3;
      }
    }

    .form-container {
      display: flex;
      align-items: center;
    }

    .form-input {
      margin-right: 10px;
    }
  </style>
</head>
<body>
  <!-- HTML content -->
  <div class="container">
    <div id="stateCircle" class="circle"></div>
    <div id="stateText" class="text"></div>
    <div class="form-container">
      <input type="text" id="inputText" class="form-input" placeholder="Enter text">
      <button id="submitButton">Submit</button>
    </div>
  </div>
  
  <!-- JS content -->
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();

    socket.on('stateChange', (state) => {
      updateState(state);
    });

    document.getElementById('submitButton').addEventListener('click', () => {
      const inputText = document.getElementById('inputText').value;
      socket.emit('textInput', inputText);
    });

    function updateState(state) {
      const stateCircle = document.getElementById('stateCircle');
      const stateText = document.getElementById('stateText');

      stateText.textContent = state;

      if (state === 'Not Started') {
        stateCircle.style.backgroundColor = 'gray';
        stateCircle.classList.remove('blink');
      } else if (state === 'In Progress') {
        stateCircle.style.backgroundColor = 'lightcoral';7
        stateCircle.classList.add('blink');
      } else if (state === 'Complete') {
        stateCircle.style.backgroundColor = 'green';
        stateCircle.classList.remove('blink');
      } else if (state === 'Fault') {
        stateCircle.style.backgroundColor = 'red';
        stateCircle.classList.remove('blink');
      }
    }
  </script>
</body>
</html>
